apply plugin: 'com.android.application'
//第二步
apply plugin: 'com.google.protobuf'
android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    defaultConfig {
        applicationId "com.qunli.gitbase"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    //第三步：配置.proto的定义文件路径
    sourceSets {
        main {
            proto {
                //main目录新建proto目录
                srcDir 'src/main/proto'
                include '**/*.proto'
            }
            java {
                srcDir 'src/main/java'
            }
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    //第四步：添加依赖
    implementation 'com.google.protobuf:protobuf-java:3.11.0'
    implementation 'com.google.protobuf:protoc:3.11.0'
    implementation project(path: ':oklib')
}

//第五步：构建task
protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc:3.11.0'
    }

    generateProtoTasks {
        all().each { task ->
            task.builtins {
                remove java
            }
            task.builtins {
                java {}//java文件
                // Add cpp output without any option.
                // DO NOT omit the braces if you want this builtin to be added.
                cpp {}//c++ 文件
            }
        }
    }
    //生成目录
    generatedFilesBaseDir = "$projectDir/src/generated"
}
